# Made by the lazy pentester Suphawith Phusanbai
# For generating WordPress backup wordlist. Can also used with Burp Suite Intruder.
# Usage python3 datetime_gen.py > output.txt 
import requests

# for storing year
first_part = range(2021,2026)
list1 = []
for year in first_part:
    list1.append(year)
# for debugging
# print(list1)
# for storing month
second_part = range(1,13)
list2 = []
for month in second_part:
    list2.append(month)
# for debugging
# print(list2)
# For storing WordPress sensitive filenames. For more wordlists , look in Github to find more.
third_part = [
    "wp-backup.zip",
    "wp-backup.tar.gz",
    "backup.sql",
    "database-backup.sql",
    "backup.tar",
    "backup.zip",
    "site-backup.sql",
    "wp-backup-2020.tar.gz"
    "wp-backup-2021.tar.gz"
    "wp-backup-2022.tar.gz"
    "wp-backup-2023.tar.gz",
    "wp-backup-2024.tar.gz",
    "wp-backup-2025.tar.gz"
    "wp-uploads-backup.tar",
    "db-backup.sql",
    "debug.log",
    "error_log",
    "wp-debug.log",
    "access_log",
    "php_error_log",
    "theme.zip",
    "plugin.zip",
    "old-theme.zip",
    "old-plugin.zip",
    "plugin-backup.zip",
    "theme-backup.zip",
    "theme-backup.tar.gz",
    "plugin-backup.tar.gz",
    "upload.php",
    "backdoor.php",
    "exec.php",
    "wp-config.php",
    "wp-config.php.bak",
    "wp-config.php~",
    "wp-config.backup",
    "config.php",
    "config.bak",
    ".env",
    ".htaccess",
    ".git",
    ".gitignore",
    ".gitmodules",
    "composer.json",
    "package.json",
    "database.sql",
    "dump.sql",
    "db-backup.sql",
    "db-dump.sql",
    "wp-database-backup.sql",
    "wp-content-backup.zip",
    "uploads.tar.gz",
    "uploads.zip",
    "wp-content.zip",
    "backdoor.php",
    "cmd-backdoor.php",
    "shell-backdoor.php",
    "wp-shell.php",
    "reverse-shell.php"
]

# Main function
def generate_datetime_wordlist(first_part, second_part, third_part):
    for year in first_part:
            for month in second_part:
                for sensitive_file in third_part:
                    formatted_month = f"{month:02d}"
                    print(f"/{year}/{formatted_month}/{sensitive_file}")

# Execution
generate_datetime_wordlist(first_part, second_part, third_part)